from config import *
from extensions import *


def markup_button(base=None):
    values_buttons = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    buttons = []
    for value in keys.keys():
        if base != value:
            buttons.append(types.KeyboardButton(value.capitalize()))

    values_buttons.add(*buttons)
    return values_buttons


@bot.message_handler(commands=['start', ])
def start_command(message):
    text = f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, {message.chat.username}, –≤ –±–æ—Ç–µ, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É –ø–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É" \
           f" –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –∫—É—Ä—Å—É!üí∏" \
           "\n–ß—Ç–æ –±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤–≤–µ–¥–∏—Ç–µ /help.‚ùì" \
           "\n–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ /convert.üîÅ"

    bot.send_message(message.from_user.id, text)


@bot.message_handler(commands=['help', ])
def help_command(message):
    text = "–î–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É –∏–∑ —Å–ø–∏—Å–∫–∞.‚¨á" \
           "\n–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é, –≤–≤–µ–¥–∏—Ç–µ /convert.üîÅ"

    bot.reply_to(message, text)


@bot.message_handler(commands=['convert'])
def values(message: telebot.types.Message):
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:‚û°"
    bot.send_message(message.from_user.id, text, reply_markup=markup_button())
    bot.register_next_step_handler(message, base_handler)


def base_handler(message: telebot.types.Message):
    base = message.text.strip().lower()
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É, –≤ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:‚¨Ö"
    bot.send_message(message.from_user.id, text, reply_markup=markup_button(base))
    bot.register_next_step_handler(message, quot_handler, base)


def quot_handler(message: telebot.types.Message, base):
    quot = message.text.strip()
    text = "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–ª—é—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å:‚ùì"
    bot.send_message(message.from_user.id, text)
    bot.register_next_step_handler(message, amount_handler, base, quot)


def amount_handler(message: telebot.types.Message, base, quot):
    amount = message.text.strip()
    try:
        correct = Convertation.get_price(base, quot, amount)
    except APIExceptions as e:
        bot.send_message(message.from_user.id, f"–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:\n{e}")
    else:
        base_from = reply_from[base.lower()]
        quot_to = reply_to[quot.lower()]
        symbol_from = symbols[base.lower()]
        symbol_to = symbols[quot.lower()]
        text = f"–¶–µ–Ω–∞ {amount} {base_from} {symbol_from} = {correct} {quot_to} {symbol_to}"
        bot.send_message(message.from_user.id, text)


bot.polling()
